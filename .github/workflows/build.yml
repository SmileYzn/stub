name: Build C/C++

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linux:
    name: Linux Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      
    - name: Add i386 architecture
      run: sudo dpkg --add-architecture i386
      
    - name: Update repository
      run: sudo apt-get update

    - name: Install build dependencies
      run: sudo apt-get install -qq -y wget unzip

    - name: Instal GCC G++ 4.8 (multilib)
      run: |
        mkdir temp
        cd temp

        # AMD 64
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/g++-4.8_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/cpp-4.8_4.8.5-4ubuntu8_amd64.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libasan0_4.8.5-4ubuntu8_amd64.deb
        sudo apt install ./gcc-4.8_4.8.5-4ubuntu8_amd64.deb ./gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb ./libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./cpp-4.8_4.8.5-4ubuntu8_amd64.deb ./libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./libasan0_4.8.5-4ubuntu8_amd64.deb ./g++-4.8_4.8.5-4ubuntu8_amd64.deb

        # i386
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/g++-4.8_4.8.5-4ubuntu8_i386.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libstdc++-4.8-dev_4.8.5-4ubuntu8_i386.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8-base_4.8.5-4ubuntu8_i386.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8_4.8.5-4ubuntu8_i386.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libgcc-4.8-dev_4.8.5-4ubuntu8_i386.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/cpp-4.8_4.8.5-4ubuntu8_i386.deb
        wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libasan0_4.8.5-4ubuntu8_i386.deb
        sudo apt install ./gcc-4.8_4.8.5-4ubuntu8_i386.deb ./gcc-4.8-base_4.8.5-4ubuntu8_i386.deb ./libstdc++-4.8-dev_4.8.5-4ubuntu8_i386.deb ./cpp-4.8_4.8.5-4ubuntu8_i386.deb ./libgcc-4.8-dev_4.8.5-4ubuntu8_i386.deb ./libasan0_4.8.5-4ubuntu8_i386.deb ./g++-4.8_4.8.5-4ubuntu8_i386.deb
        
    - name: Update GCC and G++ alternatives
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50
        sudo update-alternatives --config gcc
        sudo update-alternatives --config g++

    - name: Run build
      working-directory: ./stub
      run: make
    
    - name: Move release file to publish
      run: |
        # Make path
        mkdir -p publish/addons/stub/dlls

        # Move released file to dlls
        mv ./stub/Release/stub_mm.so publish/addons/stub/dlls

        # Copy cstrike contents to publish dir
        cp -ar cstrike/. publish

    - name: Download metamod-r
      run: |
        # Get latest release version of metamod-r
        wget --quiet https://github.com/theAsmodai/metamod-r/releases/download/1.3.0.149/metamod-bin-1.3.0.149.zip

        # Unzip metamod library to metamod folder
        unzip -p metamod-bin*.zip addons/metamod/metamod_i386.so > publish/addons/metamod/metamod_i386.so

    - name: Download hitbox_fixer
      run: |
        # Get latest release version of hitbox_fixer
        wget --quiet https://github.com/Garey27/hitbox_fixer/releases/download/1.1.5/hitbox_fix-bin-1.1.5.zip

        # Unzip hitbox_fixer library to metamod folder
        unzip -p hitbox_fix-bin*.zip addons/hitbox_fix/hitbox_fix_mm_i386.so > publish/addons/hitbox_fix/hitbox_fix_mm_i386.so

    - name: Download accuracy-fix
      run: |
        # Get latest release version of accuracy-fix
        wget --quiet https://github.com/SmileYzn/AccuracyFix/releases/download/1.1.2/accuracyfix-linux.zip

        # Unzip accuracy-fix library to metamod folder
        unzip -p accuracyfix-linux.zip addons/accuracyfix/dlls/accuracyfix_mm.so > publish/addons/accuracyfix/accuracyfix_mm.so
    - name: Deploy artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux32
        path: publish/*
        
  windows:
      name: Windows Build
      runs-on: windows-latest
  
      steps:
      - uses: actions/checkout@v4
  
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1.3
  
      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}
  
      - name: Run Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
  
      - name: Move release file to publish
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          # Make path
          mkdir publish\addons\stub\dlls
  
          # Move cstrike files to publish
          copy ${{env.SOLUTION_FILE_PATH}}\cstrike\* publish -Recurse -Force
  
          # Move released dll to publish
          copy ${{env.BUILD_CONFIGURATION}}\*.dll publish\addons\stub\dlls -Recurse -Force
  
      - name: Download Metamod-r
        run: |
          # Set assets data
          $assets = "https://github.com/theAsmodai/metamod-r/releases/download/1.3.0.149/metamod-bin-1.3.0.149.zip"
  
          # Get ZIP file name
          $zipName = "metamod-bin-1.3.0.149.zip"
  
          # Download ZIP file
          Invoke-WebRequest -Uri $assets -Out $zipName
  
          # Extract ZIP File
          Expand-Archive $zipName
  
          # Get base name from ZIP file
          $baseName = (Get-Item $zipName).BaseName
  
          # DLL from path
          $fromPath = ".\" + $baseName + "\addons\metamod\metamod.dll"
  
          # DLL dest path
          $DestPath = ".\publish\addons\metamod\metamod.dll"
          
          # Copy item
          Copy-Item -Path $fromPath -Destination $DestPath
  
      - name: Download Hitbox Fixer
        run: |
          # Set assets data
          $assets = "https://github.com/Garey27/hitbox_fixer/releases/download/1.1.5/hitbox_fix-bin-1.1.5.zip"
  
          # Get ZIP file name
          $zipName = "hitbox_fix-bin-1.1.5.zip"
  
          # Download ZIP file
          Invoke-WebRequest -Uri $assets -Out $zipName
  
          # Extract ZIP File
          Expand-Archive $zipName
  
          # Get base name from ZIP file
          $baseName = (Get-Item $zipName).BaseName
  
          # DLL from path
          $fromPath = ".\" + $baseName + "\addons\hitbox_fix\hitbox_fix_mm.dll"
  
          # DLL dest path
          $DestPath = ".\publish\addons\hitbox_fix\hitbox_fix_mm.dll"
          
          # Copy item
          Copy-Item -Path $fromPath -Destination $DestPath
  
      - name: Download Accuracy Fix
        run: |
          # Set assets data
          $assets = "https://github.com/SmileYzn/AccuracyFix/releases/download/1.1.2/accuracyfix-windows.zip"
  
          # Get ZIP file name
          $zipName = "accuracyfix-windows.zip"
  
          # Download ZIP file
          Invoke-WebRequest -Uri $assets -Out $zipName
  
          # Extract ZIP File
          Expand-Archive $zipName
  
          # Get base name from ZIP file
          $baseName = (Get-Item $zipName).BaseName
  
          # DLL from path
          $fromPath = ".\" + $baseName + "\addons\accuracyfix\dlls\accuracyfix_mm.dll"
  
          # DLL dest path
          $DestPath = ".\publish\addons\accuracyfix\accuracyfix_mm.dll"
          
          # Copy item
          Copy-Item -Path $fromPath -Destination $DestPath

      - name: Deploy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win32
          path: publish/*
